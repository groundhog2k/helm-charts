apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mongodb.fullname" . }}
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "mongodb.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "mongodb.fullname" . }}-internal
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ .Values.replicaCount }}
  updateStrategy: 
    type: {{ .Values.updateStrategyType }}  
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mongodb.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mongodb.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: mongodb
              containerPort: 27017
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
            - secretRef:
                name: {{ include "mongodb.fullname" . }}
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          args:
            {{- range .Values.args }}
            - {{ . }}
            {{- end }}
            {{- if .Values.settings.customConfig }}
            - --config
            - /etc/mongo/custom.conf
            {{- end }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: mongodb-volume
              mountPath: /data/db
            {{- if .Values.customConfig }}
            - mountPath: /etc/mongo/custom.conf
              subPath: custom.conf
              name: customconfig
            {{- end }}
            {{- if .Values.userDatabase }}
            - mountPath: /docker-entrypoint-initdb.d/init-user-db.js
              subPath: init-user-db.js
              name: inituserdb
            {{- end }}              
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        {{- if .Values.customConfig }}
        - name: customconfig
          configMap:
            name: {{ include "mongodb.fullname" . }}-customconfig
            defaultMode: 0440
        {{- end }}
        {{- if .Values.userDatabase }}
        - name: inituserdb
          secret:
            secretName: {{ include "mongodb.fullname" . }}-userdb
            defaultMode: 0440
        {{- end }}
  {{- if .Values.storage.persistentVolumeClaimName }}
        - name: mongodb-volume
          persistentVolumeClaim:
            claimName: {{ .Values.storage.persistentVolumeClaimName }}
  {{- else }}
  {{- if not .Values.storage.requestedSize }}
        - name: mongodb-volume
          emptyDir: {}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: mongodb-volume
        labels:
          {{- include "mongodb.labels" . | nindent 10 }}
      spec:
        {{- with .Values.storage.accessModes }}
        accessModes:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if .Values.storage.className }}
        storageClassName: {{ .Values.storage.className }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.storage.requestedSize }}
  {{- end }}
  {{- end }}