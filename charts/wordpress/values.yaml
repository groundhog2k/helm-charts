## Default values for Wordpress deployment

## Number of wordpress replicas
replicaCount: 1

## Netxcloud docker image
image:
  repository: wordpress
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

## Pull secrets and name override options
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

## Pod deployment strategy
strategy: {}

## Optional service account
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

## Additional node selector
nodeSelector: {}

## Additional pod annotations
podAnnotations: {}

## Pod security options (default: www-data as fsGroup and user running as non-root)
podSecurityContext:
  fsGroup: 33
  runAsUser: 33
  runAsNonRoot: true

## Default security options to run Wordpress as read only container without privilege escalation
securityContext:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  privileged: false

service:
  type: ClusterIP
  port: 80
  ## The node port (only relevant for type LoadBalancer or NodePort)
  nodePort:
  ## The cluster ip address (only relevant for type LoadBalancer or NodePort)
  clusterIP:
  ## The loadbalancer ip address (only relevant for type LoadBalancer)
  loadBalancerIP:

## Ingress configuration
ingress:
  ## Enable ingress endpoint
  enabled: false

  ## Maximal body size (default: 64m - increase if uploads to Wordpress failing)
  maxBodySize: 64m

  ## Additional ingress annotations
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  ## Hosts
  hosts:
    - host:
      paths: []

  ## TLS settings for hosts
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

## Resource limits and requests
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## Custom liveness probe (overwrites default liveness probe)
customLivenessProbe: {}

## Default liveness probe
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1
  periodSeconds: 10

## Custom readiness probe (overwrites default readiness probe)
customReadinessProbe: {}

## Default readiness probe
readinessProbe:
  enabled: true
  initialDelaySeconds: 30
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1
  periodSeconds: 10

tolerations: []

affinity: {}

## Internal container port (default: 8000)
containerPort: 8000

## Additional environment variables
env: []

## Additional arguments for the container entrypoint process
args: []

## External database settings (is used when mariadb.enabled is false)
externalDatabase: {}
  ## Name of the database (default: wordpress)
  # name: wordpress

  ## Database user
  # user:

  ## Database password
  # password:

  ## Database host
  # host:

## Wordpress specific settings
settings:
  ## Database table name prefix
  tablePrefix:
  ## Maximum file upload size (default: 64M)
  maxFileUploadSize: 64M
  ## PHP memory limit (default: 128M)
  memoryLimit: 128M

## Additional PHP custom.ini
customPhpConfig: |

## Overwrite default apache ports.conf
apachePortsConfig: |

## Overwrite default apache 000-default.conf
apacheDefaultSiteConfig: |

## Storage parameters
storage:
  ## Set persistentVolumenClaimName to reference an existing PVC
  persistentVolumeClaimName:

  ## Alternative set requestedSize to define a size for a dynmaically created PVC
  requestedSize:

  ## the storage class name
  className:

  ## Default access mode (ReadWriteOnce)
  accessModes:
    - ReadWriteOnce

## MariaDB configuration
mariadb:
  ## Enable MariaDB helm chart for deployment (default: false)
  enabled: false

  ## Database configuration
  settings:
    ## The root user password (default: a 10 char. alpahnumerical random password will be generated)
    rootPassword:

  ## Optional user database which is created during first startup with user and password
  userDatabase: {}
    ## Name of the user database
    # name:
    ## Database user with full access rights
    # user:
    ## Password of the database user (default: a 10 char. alpahnumerical random password will be generated)
    # password:

  # Storage parameters
  storage:
    ## Set persistentVolumenClaimName to reference an existing PVC
    persistentVolumeClaimName:

    ## Alternative set requestedSize to define a size for a dynmaically created PVC
    requestedSize:

    ## the storage class name
    className:
