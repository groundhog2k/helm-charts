apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "etcd.fullname" . }}
  labels:
    {{- include "etcd.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  {{- if .Values.revisionHistoryLimit }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  {{- end }}
  serviceName: {{ include "etcd.fullname" . }}-internal
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  updateStrategy: 
    type: {{ .Values.updateStrategyType }}
  selector:
    matchLabels:
      {{- include "etcd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/scripts: {{ include (print $.Template.BasePath "/scripts.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "etcd.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "etcd.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers: 
      {{- with .Values.extraInitContainers }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: client
              containerPort: 2379
            - name: peer
              containerPort: 2380
            {{- if .Values.serviceMonitor.enabled }}
            - name: prometheus
              containerPort: 12379
            {{- end }}
          {{- if .Values.customStartupProbe }}
          startupProbe:
            {{- toYaml .Values.customStartupProbe | nindent 12 }}
          {{- else }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            exec:
              command:
                - /scripts/healthcheck.sh
          {{- with .Values.startupProbe }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            successThreshold: {{ .successThreshold }}
            periodSeconds: {{ .periodSeconds }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if .Values.customLivenessProbe }}
          livenessProbe:
            {{- toYaml .Values.customLivenessProbe | nindent 12 }}
          {{- else }}
          {{- if .Values.livenessProbe.enabled }}              
          livenessProbe:
            exec:
              command:
                - /scripts/healthcheck.sh
          {{- with .Values.livenessProbe }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            successThreshold: {{ .successThreshold }}
            periodSeconds: {{ .periodSeconds }}                
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if .Values.customReadinessProbe }}
          readinessProbe:
            {{- toYaml .Values.customReadinessProbe | nindent 12 }}
          {{- else }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command:
                - /scripts/healthcheck.sh
          {{- with .Values.readinessProbe }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            successThreshold: {{ .successThreshold }}
            periodSeconds: {{ .periodSeconds }}                
          {{- end }}
          {{- end }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command:
            - /scripts/startup.sh
          {{- if .Values.args }}
          args:
            {{- range .Values.args }}
            - {{ . }}
            {{- end }}
          {{- end }}
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
          {{- range .Values.extraEnvSecrets }}
            - secretRef:
                name: {{ . }}
          {{- end }}
          volumeMounts:
            - name: {{ .Values.storage.volumeName }}
              mountPath: /data
            - name: tmp
              mountPath: /tmp
            - name: scripts
              mountPath: /scripts
            {{- range $secret := .Values.extraSecrets }}
            - name: {{ $secret.name }}
              mountPath: {{ $secret.mountPath }}
            {{- end }}
      {{- with .Values.extraContainers }}
      {{- toYaml . | nindent 8 }}
      {{- end }} 
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        - name: scripts
          configMap:
            name: {{ include "etcd.fullname" . }}-scripts
            defaultMode: 0555
        {{- range $secret := .Values.extraSecrets }}
        - name: {{ $secret.name }}
          secret:
            secretName: {{ $secret.name }}
            defaultMode: 0440
        {{- end }}
  {{- if .Values.storage.persistentVolumeClaimName }}
        - name: {{ .Values.storage.volumeName }}
          persistentVolumeClaim:
            claimName: {{ .Values.storage.persistentVolumeClaimName }}
  {{- else }}
  {{- if not .Values.storage.requestedSize }}
        - name: {{ .Values.storage.volumeName }}
          emptyDir: {}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.storage.volumeName }}
      spec:
        {{- with .Values.storage.accessModes }}
        accessModes:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if .Values.storage.className }}
        storageClassName: {{ .Values.storage.className }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.storage.requestedSize }}
  {{- end }}
  {{- end }}