## Default values for Graylog deployment

## Graylog docker image
image:
  repository: graylog/graylog
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# Default Init container image
initImage:
  repository: maxmindinc/geoipupdate
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

## Optional service account
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

## Management policy, update strategy and number of replicas
podManagementPolicy: OrderedReady
updateStrategyType: RollingUpdate
replicaCount: 1

## Pod security options (default: Graylog as fsGroup)
podSecurityContext:
  fsGroup: 1100

## Default security options to run Graylog as read only container without privilege escalation
securityContext:
  allowPrivilegeEscalation: false
  privileged: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsGroup: 1100
  runAsUser: 1100

## Default Graylog service port (default web service port)
service:
  type: ClusterIP
  port: 80
  ## The node port (only relevant for type LoadBalancer or NodePort)
  nodePort:
  ## The cluster ip address (only relevant for type LoadBalancer or NodePort)
  clusterIP:
  ## The loadbalancer ip address (only relevant for type LoadBalancer)
  loadBalancerIP:

## List of extra service ports
extraServices: {}
#  - name: udpinput
    ## Service port type
#    type: ClusterIP
    ## Service protocol
#    protocol: UDP
    ## The container target port
#    containerPort: 12001
    ## The service port
#    port: 12001
    ## The node port (only relevant for type LoadBalancer or NodePort)
#    nodePort:
    ## The cluster ip address (only relevant for type LoadBalancer or NodePort)
#    clusterIP:
    ## The loadbalancer ip address (only relevant for type LoadBalancer)
#    loadBalancerIP:

## Ingress configuration
ingress:
  ## Enable ingress endpoint
  enabled: false

  ## Additional ingress annotations
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  ## Hosts
  hosts:
    - host:
      paths: []

  ## TLS settings for hosts
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

## Resource limits and requests
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## Additional node selector
nodeSelector: {}

tolerations: []

affinity: {}

## Custom liveness probe (overwrites default liveness probe)
customLivenessProbe: {}

## Default liveness probe
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
  periodSeconds: 10

## Custom readiness probe (overwrites default readiness probe)
customReadinessProbe: {}

## Default readiness probe
readinessProbe:
  enabled: true
  initialDelaySeconds: 30
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
  periodSeconds: 10

## Additional environment variables
env: []

## Arguments for the container entrypoint process
args: []

## Reference to external MongoDB database
externalDatabase:
  ## Name of the database (default: graylog)
  name: "graylog"

  ## Database user
  user:

  ## Database password
  password:

  ## Database host
  host:

## Optinal step to enable and initialize the GeoIP database file (for more info see: https://dev.maxmind.com/geoip/geoipupdate/)
initGeoIPDatabase:
  ## Enable GeoIP database download
  enabled: false
  ## MaxMind AccountId/UserId
  accountId: ""
  ## MaxMind license key
  licenseKey: ""
  ## GeoLite database edition (https://www.maxmind.com/en/accounts/473747/geoip/downloads)
  editionId: "GeoLite2-City"

  ## The MaxMind download host (not necessary to change that)
  host:
  ## A valid proxy if internet connection is running through a proxy
  proxy:
  ## Proxy username and password in format "username:password"
  proxyUserPassword:

## Graylog specific settings
settings:
  http:
    externalUri: "http://127.0.0.1:9000/"
    publishUri:

  javaOpts:
  passwordSecret: "somepasswordpepper"

  rootUser:
    username: "admin"
    sha2Password: "8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918"
    email: ""
    timezone: "UTC"

  journal:
    maxAge: "12h"
    maxSize: "5gb"

  elastic:
    hosts: "http://127.0.0.1:9200"
    indexPrefix: "graylog"

  smtp:
    enabled: false
    host: "mail.example.com"
    port: 587
    useAuth: true
    useTls: true
    useSsl: false
    username: "you@example.com"
    password: "secret"
    emailFrom: "you@example.com"
    subjectPrefix: "[graylog]"

## Storage parameters for Graylog journal
storage:
  ##  Set persistentVolumenClaimName to reference an existing PVC
  persistentVolumeClaimName:

  ## Alternative set requestedSize to define a size for a dynmaically created PVC
  requestedSize:

  ## the storage class name
  className:

  ## Default access mode (ReadWriteOnce)
  accessModes:
    - ReadWriteOnce

## MongoDB configuration
mongodb:
  ## Enable MongoDB helm chart for deployment (default: false)
  enabled: false

  ## Database settings
  settings:
    ## The root username (default: admin)
    rootUsername: "admin"
    ## The root user password (default: a 10 char. alpahnumerical random password will be generated)
    rootPassword:

  ## Optional user database which is created during first startup with user and password
  userDatabase: {}
    ## Name of the user database
    # name:

    ## Database user with full access rights
    # user:

    ## Password of the database user (default: a 10 char. alpahnumerical random password will be generated)
    # password:

  ## Custom configuration (use instead of command args)
  customConfig: |

  # Storage parameters
  # When a persistentVolumenClaimName is configured the requestedSize and accessModes will be ignored and the existing PVC based on the name will be used
  # otherwise a dynamic persistent volume will be created with PVC name of this chart and the configured requestedSize and accessModes
  # If both parameters are missing a volatile emtpyDir volume will be used as Graylog storage
  storage:
    ## Set persistentVolumenClaimName to reference an existing PVC
    persistentVolumeClaimName:

    ## Alternative set requestedSize to define a size for a dynamically created PVC
    requestedSize:

    ## the storage class name
    className:

    ## Default access mode (ReadWriteOnce)
    accessModes:
      - ReadWriteOnce

## Elasticsearch configuration
elasticsearch:
  ## Enable Elasticsearch helm chart for deployment (default: false)
  enabled: false

  settings:
    javaOpts: "-Xms512m -Xmx512m"
    clusterName: "graylog"

  ## Storage parameters for Elasticsearch database
  storage:
    ##  Set persistentVolumenClaimName to reference an existing PVC
    persistentVolumeClaimName:

    ## Alternative set requestedSize to define a size for a dynmaically created PVC
    requestedSize:

    ## the storage class name
    className:

    ## Default access mode (ReadWriteOnce)
    accessModes:
      - ReadWriteOnce
