apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "redis.fullname" . }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
spec:
  {{- if .Values.haMode.enabled }}
  replicas: {{ .Values.haMode.replicas }}
  {{- else }}
  replicas: 1
  {{- end }}
  {{- if .Values.revisionHistoryLimit }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  {{- end }}
  serviceName: {{ include "redis.fullname" . }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  updateStrategy: 
    type: {{ .Values.updateStrategyType }}
  selector:
    matchLabels:
      {{- include "redis.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/customconfig: {{ include (print $.Template.BasePath "/customconfig.yaml") . | sha256sum }}
        checksum/scripts: {{ include (print $.Template.BasePath "/scripts.yaml") . | sha256sum }}
    {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "redis.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "redis.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: {{ .Chart.Name }}-init
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - mountPath: /data
              name: redis-data
            - name: scripts
              mountPath: /scripts
          {{- if .Values.redisConfig }}
            - mountPath: /usr/local/etc/redis/redis.conf
              subPath: redis.conf
              name: config
          {{- end }}
          {{- if .Values.sentinelConfig }}
            - mountPath: /usr/local/etc/redis/sentinel.conf
              subPath: sentinel.conf
              name: config
          {{- end }}
          {{- if .Values.extraSecretRedisConfigs }}
            - mountPath: /extraredisconfigs
              name: extraredisconfigs-volume
          {{- end }}
          {{- if .Values.extraSecretSentinelConfigs }}
            - mountPath: /extrasentinelconfigs
              name: extrasentinelconfigs-volume
          {{- end }}          
          command: [ "/scripts/init.sh" ]
      {{- with .Values.extraInitContainers }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-server
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          {{- if .Values.customStartupProbe }}
          startupProbe:
            {{- toYaml .Values.customStartupProbe | nindent 12 }}
          {{- else }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            exec:
              command:
                - sh
                - -c
                - redis-cli ping
          {{- with .Values.startupProbe }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            successThreshold: {{ .successThreshold }}
            periodSeconds: {{ .periodSeconds }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if .Values.customLivenessProbe }}
          livenessProbe:
            {{- toYaml .Values.customLivenessProbe | nindent 12 }}
          {{- else }}
          {{- if .Values.livenessProbe.enabled }}              
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - redis-cli ping
          {{- with .Values.livenessProbe }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            successThreshold: {{ .successThreshold }}
            periodSeconds: {{ .periodSeconds }}                
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if .Values.customReadinessProbe }}
          readinessProbe:
            {{- toYaml .Values.customReadinessProbe | nindent 12 }}
          {{- else }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - redis-cli ping
          {{- with .Values.readinessProbe }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            successThreshold: {{ .successThreshold }}
            periodSeconds: {{ .periodSeconds }}                
          {{- end }}
          {{- end }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command:
            - redis-server
          args:
            - /data/conf/redis.conf
            {{- range .Values.args }}
            - {{ . }}
            {{- end }}
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
          {{- range .Values.extraRedisEnvSecrets }}
            - secretRef:
                name: {{ . }}
          {{- end }}
          volumeMounts:
            - name: redis-data
              mountPath: /data
            {{- range $secret := .Values.extraRedisSecrets }}
            - name: {{ $secret.name }}
              mountPath: {{ $secret.mountPath }}
            {{- end }}
        {{- if .Values.haMode.enabled }}
        - name: {{ .Chart.Name }}-sentinel
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: sentinel
              containerPort: 26379
              protocol: TCP
          {{- if .Values.customLivenessProbe }}
          livenessProbe:
            {{- toYaml .Values.customLivenessProbe | nindent 12 }}
          {{- else }}
          {{- if .Values.livenessProbe.enabled }}              
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - redis-cli -p 26379 ping
          {{- with .Values.livenessProbe }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            successThreshold: {{ .successThreshold }}
            periodSeconds: {{ .periodSeconds }}                
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if .Values.customReadinessProbe }}
          readinessProbe:
            {{- toYaml .Values.customReadinessProbe | nindent 12 }}
          {{- else }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - redis-cli -p 26379 ping
          {{- with .Values.readinessProbe }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            successThreshold: {{ .successThreshold }}
            periodSeconds: {{ .periodSeconds }}                
          {{- end }}
          {{- end }}
          {{- end }}
          {{- with .Values.sentinelResources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command:
            - redis-sentinel
          args:
            - /data/conf/sentinel.conf
            {{- range .Values.sentinelArgs }}
            - {{ . }}
            {{- end }}
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
          {{- range .Values.extraSentinelEnvSecrets }}
            - secretRef:
                name: {{ . }}
          {{- end }}
          volumeMounts:
            - name: redis-data
              mountPath: /data
            {{- range $secret := .Values.extraSentinelSecrets }}
            - name: {{ $secret.name }}
              mountPath: {{ $secret.mountPath }}
            {{- end }}
        {{- end }}
      {{- with .Values.extraContainers }}
      {{- toYaml . | nindent 8 }}
      {{- end }} 
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: scripts
          configMap:
            name: {{ include "redis.fullname" . }}-scripts
            defaultMode: 0555
        {{- if or (.Values.redisConfig) (.Values.sentinelConfig) }}
        - name: config
          configMap:
            name: {{ include "redis.fullname" . }}
        {{- end }}
        {{- range $secret := .Values.extraRedisSecrets }}
        - name: {{ $secret.name }}
          secret:
            secretName: {{ $secret.name }}
            defaultMode: 0440
        {{- end }}
        {{- range $secret := .Values.extraSentinelSecrets }}
        - name: {{ $secret.name }}
          secret:
            secretName: {{ $secret.name }}
            defaultMode: 0440
        {{- end }}
        {{- if .Values.extraSecretRedisConfigs }}
        - name: extraredisconfigs-volume
          secret:
            secretName: {{ .Values.extraSecretRedisConfigs }}
        {{- end }}
        {{- if .Values.extraSecretSentinelConfigs }}
        - name: extrasentinelconfigs-volume
          secret:
            secretName: {{ .Values.extraSecretSentinelConfigs }}
        {{- end }}
{{- with .Values.storage }}
  {{- $createPvc := and (empty .persistentVolumeClaimName) .requestedSize }}
  {{- if not $createPvc }}
        - name: redis-data
        {{- if .persistentVolumeClaimName }}
          persistentVolumeClaim:
            claimName: {{ .persistentVolumeClaimName }}
        {{- else }}
          emptyDir: {}
        {{- end }}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: redis-data
      spec:
        {{- with .accessModes }}
        accessModes:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if .className }}
        storageClassName: {{ .className }}
        {{- end }}
        resources:
          requests:
            storage: {{ .requestedSize }}
  {{- end }}
{{- end }}
